---
import truncate from 'lodash.truncate';

import MediaCard from './MediaCard.astro';

import { MarkdownFrontmatter } from '../pages/index.astro';

async function getLatestBlogPost() {
  const allPosts = await Astro.glob<MarkdownFrontmatter>('/data/posts/*.md');
  const sortedPosts = allPosts.sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  );

  const { frontmatter } = sortedPosts[0];

  return frontmatter;
}

let apiCallTries = 5;

async function getLatestPodcast() {
  try {
    const response = await fetch(
      'https://player.megaphone.fm/playlist/PODRYL5396410253/'
    );
    const podcastData = await response.json();
    const latestPodcastEpisode = podcastData?.episodes[0];

    const podcastDescription = truncate(
      latestPodcastEpisode?.summary?.replace(/(<([^>]+)>)/gi, ''),
      {
        length: 260,
        separator: /,?\.* +/
      }
    );

    latestPodcastEpisode.description = podcastDescription;

    return latestPodcastEpisode;
  } catch (error) {
    if (apiCallTries <= 0) {
      throw error;
    }

    apiCallTries--;

    setTimeout(function () {
      return getLatestPodcast();
    }, 5000);
  }
}

const latestBlogPost = await getLatestBlogPost();
const latestPodcastEpisode = await getLatestPodcast();

const podcastImg = {
  src: '/img/hero-images/www.png'
};
---

<section
  class="section flex flex-wrap justify-center bg-white"
  data-aos="fade-down"
>
  <div class="section-content flex flex-col divide-y-2 divide-[#D8E3E8]">
    <slot />

    <div>
      <MediaCard
        mediaType="podcast"
        imgSrc={podcastImg.src}
        details={latestPodcastEpisode}
        data-aos="fade-up"
      />

      <MediaCard
        details={latestBlogPost}
        imgSrc="/img/about/desk.jpg"
        mediaType="blog post"
        data-aos="fade-up"
      />
    </div>
  </div>
</section>
